//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.0.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package de.blinkt.openvpn.fragments;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.ViewFlipper;
import cn.com.aixiaoqi.R;
import com.handsomezhou.contactssearch.view.T9TelephoneDialpadView;
import de.blinkt.openvpn.views.ATypeViewIndicator;
import de.blinkt.openvpn.views.ContactView;
import de.blinkt.openvpn.views.TelephoneRecordsView;
import org.androidannotations.api.UiThreadExecutor;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class Fragment_Phone_
    extends de.blinkt.openvpn.fragments.Fragment_Phone
    implements HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(R.layout.fragment_phone, container, false);
        }
        return contentView_;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        contentView_ = null;
        contactview = null;
        contactview2 = null;
        indicator = null;
        viewflipper = null;
        t9dialpadview = null;
        dialphoneview = null;
        phonecall = null;
        closedial = null;
        dial_input_edit_text = null;
        operationLinearLayout = null;
        editTextView = null;
        dial_delete_btn = null;
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static Fragment_Phone_.FragmentBuilder_ builder() {
        return new Fragment_Phone_.FragmentBuilder_();
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.contactview = ((ContactView) hasViews.findViewById(R.id.contactview));
        this.contactview2 = ((TelephoneRecordsView) hasViews.findViewById(R.id.contactview2));
        this.indicator = ((ATypeViewIndicator) hasViews.findViewById(R.id.indicator));
        this.viewflipper = ((ViewFlipper) hasViews.findViewById(R.id.viewflipper));
        this.t9dialpadview = ((T9TelephoneDialpadView) hasViews.findViewById(R.id.t9dialpadview));
        this.dialphoneview = hasViews.findViewById(R.id.dialphoneview);
        this.phonecall = ((ImageView) hasViews.findViewById(R.id.phonecall));
        this.closedial = ((ImageView) hasViews.findViewById(R.id.closedial));
        this.dial_input_edit_text = ((EditText) hasViews.findViewById(R.id.dial_input_edit_text));
        this.operationLinearLayout = ((LinearLayout) hasViews.findViewById(R.id.operationLinearLayout));
        this.editTextView = ((TextView) hasViews.findViewById(R.id.editTextView));
        this.dial_delete_btn = ((ImageView) hasViews.findViewById(R.id.dial_delete_btn));
        if (this.phonecall!= null) {
            this.phonecall.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    Fragment_Phone_.this.phonecallClicked();
                }
            }
            );
        }
        if (this.closedial!= null) {
            this.closedial.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    Fragment_Phone_.this.closedialClicked();
                }
            }
            );
        }
        inited();
    }

    @Override
    void showDialPadSelected(final Boolean selected) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                Fragment_Phone_.super.showDialPadSelected(selected);
            }
        }
        , 0L);
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<Fragment_Phone_.FragmentBuilder_, de.blinkt.openvpn.fragments.Fragment_Phone>
    {

        @Override
        public de.blinkt.openvpn.fragments.Fragment_Phone build() {
            Fragment_Phone_ fragment_ = new Fragment_Phone_();
            fragment_.setArguments(args);
            return fragment_;
        }
    }
}
